// <auto-generated />
using System;
using Blazor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Blazor.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20201120093512_название_миграции")]
    partial class название_миграции
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Blazor.Models.Article", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ArticleText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AutorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateData")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ThematicsID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AutorID");

                    b.HasIndex("ThematicsID");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("Blazor.Models.Autor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Autors");
                });

            modelBuilder.Entity("Blazor.Models.FileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Blazor.Models.Thematics", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Thematic");
                });

            modelBuilder.Entity("Blazor.Models.Article", b =>
                {
                    b.HasOne("Blazor.Models.Autor", "Autor")
                        .WithMany("Articles")
                        .HasForeignKey("AutorID");

                    b.HasOne("Blazor.Models.Thematics", "Thematics")
                        .WithMany("Articles")
                        .HasForeignKey("ThematicsID");

                    b.Navigation("Autor");

                    b.Navigation("Thematics");
                });

            modelBuilder.Entity("Blazor.Models.Autor", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Blazor.Models.Thematics", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
