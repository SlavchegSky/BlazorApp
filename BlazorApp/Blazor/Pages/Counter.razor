@page "/counter"
@using System.IO
@using Microsoft.AspNetCore.Http
@using Blazor.Controller
@inject SetCookies SetCookies
@inject IJSRuntime JSRuntime


<div @onclick="SetCoordinates" class="container-fluid border border-dark">
    <h1>Blazor Counter</h1>

    <div>
        <button @onclick="IncrementCount">+</button>
        <span>@currentCount</span>
        <button @onclick="DecrementCount">-</button>
    </div>

    <p><span class="border border-danger">Ctrl +</span> - увеличивает на 10</p>
    <p><span class="border border-danger">>Alt -</span> - уменьшает на 10</p>
    <p>***</p>
    <p>Кука X: @x Кука Y: @y</p>
    <p>***</p>

    <p>Координата X: @coordX</p>
    <p>Координата Y: @coordY</p>
</div>

@code {
#nullable enable

    private int currentCount = 0;
    private double coordX;
    private double coordY;

    public string? x;
    public string? y;


    protected override async Task OnInitializedAsync()
    {
        x = await SetCookies.CookiesRequest("X");
        y = await SetCookies.CookiesRequest("Y");
    }

    private async Task IncrementCount(MouseEventArgs e)
    {
        await Task.Delay(500);
        if (e.CtrlKey == true) currentCount = currentCount + 10;
        else currentCount++;
    }
    private async Task DecrementCount(MouseEventArgs e)
    {
        await Task.Delay(500);
        if (e.AltKey == true) currentCount = currentCount - 10;
        else currentCount--;
    }

    private async Task SetCoordinates(MouseEventArgs e)
    {
        int days = 6;
        coordX = e.ClientX;
        coordY = e.ClientY;
        await WriteCookieAsync("X", coordX.ToString(), days);
        await WriteCookieAsync("Y", coordY.ToString(), days);

        await OnInitializedAsync();

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("setTitle", "Тренируемся");
    }

    public async Task WriteCookieAsync(string name, string value, int days)
    {
        await JSRuntime.InvokeAsync<string>("WriteCookie", name, value, days);

    }
}